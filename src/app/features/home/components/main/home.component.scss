    //---------------------    inizio stile header    --------------------------
    .header {
        display: grid;
        grid-template-columns: 20% 60% 20%;
        grid-template-rows: 100%;
        width: 100%;
        height: 100px;
        padding-top: 40px;
        color: white;
        background-image: linear-gradient(90deg, rgba(171, 225, 250) 0%, rgba(214, 171, 255, ) 100%);
        position: absolute;
        top: 0vh;
        left: 0vh;
        font-size: 6vh;
        z-index: -1;
    }
    
    .home {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 1;
        padding-left: 55px;
        cursor: pointer;
        outline: none;
        display: none;
        visibility: hidden;
    }
    
    .scritta-home {
        float: right;
        margin-top: 8px;
        margin-right: 95px;
        font-size: 3vh;
        cursor: pointer;
        outline: none;
        margin-top: 13px;
    }
    
    .welcome {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 1;
        grid-row-end: 1;
        text-align: center;
        font-weight: bold;
    }
    
    .cart {
        grid-column-start: 3;
        grid-column-end: 3;
        color: white;
        text-align: right;
        z-index: 999999;
        padding-right: 55px;
    }
    
    .cart:hover {
        grid-column-start: 3;
        grid-column-end: 3;
        color: rgb(194, 128, 255);
        text-align: right;
        z-index: 999999;
        padding-right: 55px;
    }
    
    .cart:hover i {
        color: rgb(194, 128, 255);
        cursor: pointer;
    }
    
    i {
        color: white;
        outline: none;
        font-size: 5vh;
        top: -200px;
    }
    
    .scritta-carrello {
        float: right;
        outline: none;
        margin-top: 7px;
        margin-left: 10px;
        font-size: 3vh;
        cursor: pointer;
    }
    
    .scritta-carrello:hover {
        float: right;
        margin-top: 7px;
        margin-left: 10px;
        font-size: 3vh;
        color: rgb(194, 128, 255);
        cursor: pointer;
    }
    
    .personalizza {
        background-color: rgb(194, 128, 255);
        position: absolute;
        margin-left: 41.2%;
        top: 750px;
        text-align: center;
        width: 20%;
        height: 7vh;
        border: 0px solid rgb(194, 128, 255);
        border-radius: 5px;
        color: white;
        font-size: 15px;
        font-family: 'Gill Sans', 'Gill Sans MT', 'Trebuchet MS', sans-serif;
        font-weight: bold;
        cursor: pointer;
        outline: none;
    }
    
    .personalizza:hover {
        background-color: rgb(194, 128, 255);
        animation: rotate 0.5s ease-in-out both;
        position: absolute;
        margin-left: 41.2%;
        top: 750px;
        text-align: center;
        width: 20%;
        height: 7vh;
        border: 0px solid rgb(194, 128, 255);
        border-radius: 5px;
        color: white;
        font-size: 15px;
        font-family: 'Gill Sans', 'Gill Sans MT', 'Trebuchet MS', sans-serif;
        font-weight: bold;
        cursor: pointer;
        outline: none;
    }
    
    //carousel
    $max-slides: 5;
    $prefix: true;
    $responsive: true;
    $breakpoint-small: 500px;
    $fade-time: 1;
    $prev-next-fontfamily: sans-serif;
    $prev-next-icon-size: 3vw;
    $prev-next-icon-color: rgb(194, 128, 255);
    $prev-next-bg: rgba(255, 255, 255, 0);
    $prev-next-bg-hover: rgba(255, 255, 255, 0.1);
    $prev-icon: '❮';
    $next-icon: '❯';
    $autohide-next-prev: true;
    $quick-nav-color: rgb(204, 204, 204);
    $quick-nav-active-color: rgb(194, 128, 255);
    $fade-color: #fff;
    $autoplay: true;
    $autoplay-duration: 5;
    /*
  * ===== MIXINS =====
  *
  * This section contains mixin used
  * Do not change anything here unless you know what you are doing.
  */
    /* Mixins to handle prefixes */
    
    @mixin fadeshow-transition($value...) {
        @if length($value) < 1 {
            $value: all 150ms linear;
        }
        @if $prefix==true {
            -webkit-transition: $value;
        }
        transition: $value;
    }
    
    @mixin fadeshow-transform($value...) {
        @if length($value) < 1 {
            $value: all 150ms linear;
        }
        @if $prefix==true {
            -webkit-transform: $value;
            -ms-transform: $value;
        }
        transform: $value;
    }
    
    @mixin fadeshow-animation($value...) {
        @if $prefix==true {
            -webkit-animation: $value;
        }
        animation: $value;
    }
    
    @mixin fadeshow-animation-delay($value) {
        @if $prefix==true {
            -webkit-animation-delay: $value;
        }
        animation-delay: $value;
    }
    
    @mixin fadeshow-unselectable() {
        @if $prefix==true {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
        }
        user-select: none;
    }
    /* Mixins to handle Quick Navigation Button states */
    
    @mixin quickNavBtnActive() {
        background-color: $quick-nav-active-color;
    }
    
    @mixin quickNavBtnInactive() {
        background-color: $quick-nav-color;
    }
    /*
  * ===== FADESHOW =====
  *
  * Base functionality for the fadeshow.
  * Do not change anything here unless you know what you are doing.
  */
    
    [data-am-fadeshow] {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;
        background-color: $fade-color;
        /* Slides */
        .fs-slide {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            opacity: 0;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            @include fadeshow-transition(opacity #{$fade-time}s ease);
            /* Display first child on load */
            &:first-child {
                opacity: 1;
            }
        }
        /* Quick Navigation */
        .fs-quick-nav {
            position: absolute;
            bottom: 15px;
            left: 50%;
            @include fadeshow-unselectable();
            @include fadeshow-transform(translateX(-50%));
        }
        .fs-quick-btn {
            display: inline-block;
            width: 15px;
            height: 15px;
            margin: 0 2px;
            border-radius: 50%;
            cursor: pointer;
            @include fadeshow-transition(opacity 200ms ease);
            @include quickNavBtnInactive();
            &:hover {
                opacity: 0.8;
            }
            /* Set active state to first button on load */
            &:first-child {
                @include quickNavBtnActive();
            }
        }
        /* Prev/Next Navigation */
        %prev-next {
            position: absolute;
            display: none;
            top: 0;
            bottom: 0;
            width: 100px;
            cursor: pointer;
            font-family: $prev-next-fontfamily;
            background-color: $prev-next-bg;
            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
            @include fadeshow-transition(all 200ms ease);
            @if $responsive==true {
                @media (max-width: $breakpoint-small) {
                    width: 50%;
                }
            }
            &:before {
                position: absolute;
                top: 50%;
                font-size: $prev-next-icon-size;
                color: $prev-next-icon-color;
            }
            &:hover {
                background-color: $prev-next-bg-hover;
                @if $responsive==true {
                    @media (max-width: $breakpoint-small) {
                        background-color: rgba(255, 255, 255, 0);
                    }
                }
            }
        }
        .fs-prev-btn {
            @extend %prev-next;
            left: 0;
            &:before {
                content: "#{$prev-icon}";
                left: 50%;
                @include fadeshow-transform(translate(-50%, -50%));
                @if $responsive==true {
                    @media (max-width: $breakpoint-small) {
                        left: 30px;
                    }
                }
            }
            @if $autohide-next-prev==true {
                @include fadeshow-transform(translateX(-100%));
                @if $responsive==true {
                    @media (max-width: $breakpoint-small) {
                        @include fadeshow-transform(translate(0));
                    }
                }
            }
        }
        .fs-next-btn {
            @extend %prev-next;
            right: 0;
            &:before {
                content: "#{$next-icon}";
                right: 50%;
                @include fadeshow-transform(translate(50%, -50%));
                @if $responsive==true {
                    @media (max-width: $breakpoint-small) {
                        right: 30px;
                    }
                }
            }
            @if $autohide-next-prev==true {
                @include fadeshow-transform(translateX(100%));
                @if $responsive==true {
                    @media (max-width: $breakpoint-small) {
                        @include fadeshow-transform(translate(0));
                    }
                }
            }
        }
        /* Base functionality */
        input[type="radio"] {
            position: fixed;
            top: -9999px;
            &:checked {
                /* This loop handles the slide switching and quick navigation active state */
                $i: $max-slides;
                @while $i>0 {
                    &:nth-of-type(#{$i}) {
                        /* Show slide */
                        ~.fs-slides {
                            .fs-slide {
                                //Cancel autoplay
                                opacity: 0;
                                @include fadeshow-animation(none !important);
                            }
                            .fs-slide:nth-child(#{$i}) {
                                opacity: 1;
                            }
                        }
                        /* Add active state to dot */
                        ~.fs-quick-nav {
                            .fs-quick-btn {
                                @include quickNavBtnInactive();
                                /* Cancel autoplay */
                                @include fadeshow-animation(none !important);
                            }
                            .fs-quick-btn:nth-child(#{$i}) {
                                background-color: $quick-nav-active-color;
                                &:hover {
                                    opacity: 1;
                                }
                            }
                        }
                    }
                    $i: $i - 1;
                }
                /* Hide navigation if only one slide */
                &:first-of-type:last-of-type {
                    ~.fs-quick-nav,
                    ~.fs-prev-nav,
                    ~.fs-next-nav {
                        display: none !important;
                    }
                }
            }
        }
        /* Autohide Prev/Next Navigation */
        @if $autohide-next-prev==true {
            &:hover {
                .fs-prev-btn,
                .fs-next-btn {
                    @include fadeshow-transform(translateX(0));
                }
            }
        }
    }
    /*
  * ===== PREV/NEXT NAVIGATION =====
  *
  * This section handles the prev/next navigation.
  */
    /* Handle Prev/Next buttons */
    
    [data-am-fadeshow~="next-prev-navigation"] {
        input[type="radio"] {
            &:checked {
                $i: $max-slides;
                @while $i>0 {
                    &:nth-of-type(#{$i}) {
                        $prev: ($i - 1);
                        $next: ($i + 1);
                        /* Show previous button */
                        @if $prev>0 {
                            ~.fs-prev-nav {
                                .fs-prev-btn {
                                    display: none;
                                }
                                .fs-prev-btn:nth-child(#{$prev}) {
                                    display: block;
                                }
                            }
                        }
                        /* Show next button */
                        @if $next < ($max-slides+1) {
                            ~.fs-next-nav {
                                .fs-next-btn {
                                    display: none;
                                }
                                .fs-next-btn:nth-child(#{$next}) {
                                    display: block;
                                }
                            }
                        }
                        /* Show last prev button if first slide */
                        &:first-of-type {
                            ~.fs-prev-nav {
                                .fs-prev-btn:last-child {
                                    display: block;
                                }
                            }
                        }
                        /* Show first next button if last slide */
                        &:last-of-type {
                            ~.fs-next-nav {
                                .fs-next-btn:first-child {
                                    display: block;
                                }
                            }
                        }
                    }
                    $i: $i - 1;
                }
            }
        }
        /* Display first pair of Prev/Next Buttons on load */
        .fs-prev-btn:last-child {
            display: block;
        }
        .fs-next-btn:nth-child(2) {
            display: block
        }
    }
    /*
  * ===== AUTOPLAY =====
  *
  * Functions to handle autoplay.
  * If you're not going to use autoplay, set $autoplay to false.
  * This part tends to compile into a lot of uneccesary CSS otherwise.
  */
    
    @if $autoplay==true {
        $i: $max-slides;
        @while $i>1 {
            $total-duration: $autoplay-duration * $i;
            @keyframes quickNavAnimation-#{$i} {
                0% {
                    @include quickNavBtnInactive();
                }
                #{100% * $fade-time / $total-duration},
                #{100% * $autoplay-duration / $total-duration} {
                    @include quickNavBtnActive();
                }
                #{100% * ($autoplay-duration + $fade-time) / $total-duration},
                100% {
                    @include quickNavBtnInactive();
                }
            }
            @if $prefix==true {
                @-webkit-keyframes quickNavAnimation-#{$i} {
                    0% {
                        @include quickNavBtnInactive();
                    }
                    #{100% * $fade-time / $total-duration},
                    #{100% * $autoplay-duration / $total-duration} {
                        @include quickNavBtnActive();
                    }
                    #{100% * ($autoplay-duration + $fade-time) / $total-duration},
                    100% {
                        @include quickNavBtnInactive();
                    }
                }
            }
            @keyframes slidesAnimation-#{$i} {
                0% {
                    opacity: 0;
                }
                #{100% * $fade-time / $total-duration},
                #{100% * $autoplay-duration / $total-duration} {
                    opacity: 1;
                }
                #{100% * ($autoplay-duration + $fade-time) / $total-duration},
                100% {
                    opacity: 0;
                }
            }
            @if $prefix==true {
                @-webkit-keyframes slidesAnimation-#{$i} {
                    0% {
                        opacity: 0;
                    }
                    #{100% * $fade-time / $total-duration},
                    #{100% * $autoplay-duration / $total-duration} {
                        opacity: 1;
                    }
                    #{100% * ($autoplay-duration + $fade-time) / $total-duration},
                    100% {
                        opacity: 0;
                    }
                }
            }
            [data-am-fadeshow~="autoplay"] {
                input[type="radio"]:nth-of-type(#{$i}):last-of-type {
                    /* Slide animation */
                    ~.fs-slides {
                        .fs-slide {
                            @include fadeshow-animation(slidesAnimation-#{$i} #{$total-duration}s infinite);
                        }
                    }
                    /* Quick navigation animation */
                    ~.fs-quick-nav {
                        .fs-quick-btn {
                            @include fadeshow-animation(quickNavAnimation-#{$i} #{$total-duration}s infinite);
                        }
                    }
                    /* Animation Delay */
                    @for $j from 1 through $i {
                        ~.fs-slides .fs-slide:nth-child(#{$j}),
                        ~.fs-quick-nav .fs-quick-btn:nth-child(#{$j}) {
                            $animation-delay: #{($j - 1) * ($autoplay-duration) - $fade-time}s;
                            @include fadeshow-animation-delay(#{$animation-delay});
                        }
                    }
                }
                $i: $i - 1;
            }
        }
    }
    
    //dimensioni carousel
    .container {
        height: 500px;
        width: 80%;
        position: relative;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 170px 10%;
        border-top: 15px solid rgb(204, 204, 204);
        border-bottom: 15px solid rgb(204, 204, 204);
        border-right: 15px solid rgb(229, 229, 229);
        border-left: 15px solid rgb(229, 229, 229);
        z-index: 0;
    }
    
    //end carousel
    //start animazioni
    @keyframes rotate {
        0% {
            transform: rotate(0deg) translate3d(0, 0, 0);
        }
        25% {
            transform: rotate(3deg) translate3d(0, 0, 0);
        }
        50% {
            transform: rotate(-3deg) translate3d(0, 0, 0);
        }
        75% {
            transform: rotate(1deg) translate3d(0, 0, 0);
        }
        100% {
            transform: rotate(0deg) translate3d(0, 0, 0);
        }
    }
    
    @keyframes storm {
        0% {
            transform: translate3d(0, 0, 0) translateZ(0);
        }
        25% {
            transform: translate3d(4px, 0, 0) translateZ(0);
        }
        50% {
            transform: translate3d(-3px, 0, 0) translateZ(0);
        }
        75% {
            transform: translate3d(2px, 0, 0) translateZ(0);
        }
        100% {
            transform: translate3d(0, 0, 0) translateZ(0);
        }
    }
    /*end animazioni*/
    
    @media screen and (max-width: 750px) {
        .personalizza {
            width: 50%;
            margin-left: 30%;
            margin-right: 30%;
        }
        .personalizza:hover {
            width: 50%;
            margin-left: 30%;
            margin-right: 30%;
        }
    }
    
    $time: 0.3s;
    .gallery {
        display: grid;
        width: 40%;
        margin-left: auto;
        margin-right: auto;
        grid-template-rows: repeat(5, 15vh);
        grid-template-columns: repeat(2, 20vw);
        transition: all $time ease(gravity);
        background-image: linear-gradient(90deg, rgba(171, 225, 250) 0%, rgba(214, 171, 255, ) 100%);
        align-items: center;
        border-radius: 10px;
        padding: 0.50em;
        cursor: pointer;
        // grid-gap: .25em;
        @media (min-width: 40em) {
            grid-template-columns: repeat(5, 18vw);
            grid-template-rows: repeat(2, 20vh);
        }
        @media (min-width: 60em) {
            grid-template-columns: repeat(10, 8vw);
            grid-template-rows: 25vh;
        }
    }
    
    .gallery img {
        object-fit: cover;
        outline: none;
        margin: "auto";
        width: 80%;
        height: 80%;
        cursor: pointer;
        left: 0;
        top: 0;
        transition: all $time/2 ease(downhill);
        position: relative;
        box-shadow: 0 0 0 #0000;
        filter: sepia(80%) hue-rotate(180deg);
        &:first-child {
            border-radius: 10px 10px 0 0;
        }
        &:last-child {
            border-radius: 0 0 10px 10px;
        }
        @media (min-width: 40em) and (max-width: 59.99em) {
            &:first-child {
                border-radius: 10px 0 0 0;
            }
            &:nth-child(5) {
                border-radius: 0 10px 0 0;
            }
            &:nth-child(6) {
                border-radius: 0 0 10px 0;
            }
            &:last-child {
                border-radius: 0 0 0 10px;
            }
        }
        @media (min-width: 60em) {
            &:first-child {
                border-radius: 10px 0 0 10px;
            }
            &:last-child {
                border-radius: 0 10px 10px 0;
            }
        }
        &:hover {
            opacity: 1;
            z-index: 1;
            box-shadow: 1em 1em 1em #0004;
            transition: all $time ease(downhill);
            filter: sepia(0%) hue-rotate(0deg);
            border-radius: 5px;
            width: 300%;
            height: 300%;
            left: -100%;
            top: -100%;
            @media (min-width: 40em) {
                width: 250%;
                height: 500%;
                left: -75%;
                top: -200%;
            }
            @media (min-width: 40em) and (orientation: portrait) {
                width: 300%;
                height: 300%;
                left: -100%;
                top: -100%;
            }
            @media (min-width: 60em) {
                width: 350%;
                height: 150%;
                left: -75%;
                top: -25%;
                ~img {
                    left: 175%;
                }
            }
            @media (min-width: 60em) and (orientation: landscape) {
                width: 300%;
                height: 300%;
                left: -75%;
                top: -100%;
                ~img {
                    left: 100%;
                }
            }
        }
    }